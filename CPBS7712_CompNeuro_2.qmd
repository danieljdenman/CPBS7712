---
title: "Computational Neuroscience"
subtitle: "Dimension reduction & DL of structure in neural and behavioral data"
author: "Daniel Denman<br>CU Anschutz Comp Bio 7712<br>Feb 27 2025"
format: revealjs
jupyter: python3
---

# {auto-animate=true}
### theoretical models _and_ data-driven analyses {.center}
![](./media/ConceptMap.png){.nostretch fig-align="center" width=580}

# Outline {auto-animate=true}
:::{.incremental}
- Systems Neuroscience Experiments
  - what are we computing about?
- Dimensionality reduction
- Hidden Markov Models
:::

# Systems Neuroscience Experiments

::: {.column width="40%"}
Neuropixels
:::

::: {.column width="60%"}
2-p
:::


# Systems Neuroscience Experiments

::: {.column width="40%"}
Neuropixels - signal extraction, clustering/template matching
:::

::: {.column width="60%"}
image registration, signal extraction
:::

# Dimensionality Reduction
## Vector sum

- Turn off alarm :wave:
- Get out of bed

# Dimensionality Reduction
## PCA

- Eat eggs
- Drink coffee

# Dimensionality Reduction
## jPCA

-churchland

# Dimensionality Reduction
## CEBRA, Sanechi

- deep learning

# Hidden Dynamics
## Markov Models

Analysis

## Dinner

- Eat spaghetti
- Drink wine

## Going to sleep

- Get in bed
- Count sheep

## interactive 
For a demonstration of a line plot on a polar axis, see @fig-polar.

```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 4 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```
